// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              Int     @id @default(autoincrement())
  email           String  @unique
  display_name    String
  username        String  @unique
  password        String
  profile_picture String?

  messages     Message[]
  groupMembers GroupMember[]
  chats        Chat[]        @relation("ChatMembers")
}

model Message {
  id        Int      @id @default(autoincrement())
  content   String
  timestamp DateTime @default(now())
  senderId  Int
  sender    User     @relation(fields: [senderId], references: [id])
  chatId    Int
  chat      Chat     @relation(fields: [chatId], references: [id])
}

model Chat {
  id        Int        @id @default(autoincrement())
  type      ChatType
  messages  Message[]
  members   User[]     @relation("ChatMembers")
  GroupChat GroupChat?
}

model GroupChat {
  id      Int           @id @default(autoincrement())
  name    String
  chatId  Int           @unique
  chat    Chat          @relation(fields: [chatId], references: [id])
  members GroupMember[]
}
// fix this tommorow
model ChatMember {
  id      Int       @id @default(autoincrement())
  userId  Int
  user    User      @relation(fields: [userId], references: [id])
  groupId Int
  group   GroupChat @relation(fields: [groupId], references: [id])
}

enum ChatType {
  ONE_TO_ONE
  GROUP
}
